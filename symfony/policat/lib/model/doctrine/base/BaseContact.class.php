<?php

/**
 * BaseContact
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $status
 * @property integer $mailing_list_id
 * @property string $email
 * @property integer $gender
 * @property string $firstname
 * @property string $lastname
 * @property string $country
 * @property string $language_id
 * @property MailingList $MailingList
 * @property Doctrine_Collection $PetitionSigning
 * @property Language $Language
 * @property Doctrine_Collection $ContactMeta
 * @property Doctrine_Collection $PetitionSigningContact
 * @property Doctrine_Collection $PetitionContacts
 * @property Doctrine_Collection $Pledges
 * 
 * @method integer             getId()                     Returns the current record's "id" value
 * @method integer             getStatus()                 Returns the current record's "status" value
 * @method integer             getMailingListId()          Returns the current record's "mailing_list_id" value
 * @method string              getEmail()                  Returns the current record's "email" value
 * @method integer             getGender()                 Returns the current record's "gender" value
 * @method string              getFirstname()              Returns the current record's "firstname" value
 * @method string              getLastname()               Returns the current record's "lastname" value
 * @method string              getCountry()                Returns the current record's "country" value
 * @method string              getLanguageId()             Returns the current record's "language_id" value
 * @method MailingList         getMailingList()            Returns the current record's "MailingList" value
 * @method Doctrine_Collection getPetitionSigning()        Returns the current record's "PetitionSigning" collection
 * @method Language            getLanguage()               Returns the current record's "Language" value
 * @method Doctrine_Collection getContactMeta()            Returns the current record's "ContactMeta" collection
 * @method Doctrine_Collection getPetitionSigningContact() Returns the current record's "PetitionSigningContact" collection
 * @method Doctrine_Collection getPetitionContacts()       Returns the current record's "PetitionContacts" collection
 * @method Doctrine_Collection getPledges()                Returns the current record's "Pledges" collection
 * @method Contact             setId()                     Sets the current record's "id" value
 * @method Contact             setStatus()                 Sets the current record's "status" value
 * @method Contact             setMailingListId()          Sets the current record's "mailing_list_id" value
 * @method Contact             setEmail()                  Sets the current record's "email" value
 * @method Contact             setGender()                 Sets the current record's "gender" value
 * @method Contact             setFirstname()              Sets the current record's "firstname" value
 * @method Contact             setLastname()               Sets the current record's "lastname" value
 * @method Contact             setCountry()                Sets the current record's "country" value
 * @method Contact             setLanguageId()             Sets the current record's "language_id" value
 * @method Contact             setMailingList()            Sets the current record's "MailingList" value
 * @method Contact             setPetitionSigning()        Sets the current record's "PetitionSigning" collection
 * @method Contact             setLanguage()               Sets the current record's "Language" value
 * @method Contact             setContactMeta()            Sets the current record's "ContactMeta" collection
 * @method Contact             setPetitionSigningContact() Sets the current record's "PetitionSigningContact" collection
 * @method Contact             setPetitionContacts()       Sets the current record's "PetitionContacts" collection
 * @method Contact             setPledges()                Sets the current record's "Pledges" collection
 * 
 * @package    policat
 * @subpackage model
 * @author     Martin
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContact extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contact');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 4,
             ));
        $this->hasColumn('mailing_list_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('email', 'string', 80, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 80,
             ));
        $this->hasColumn('gender', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('firstname', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('lastname', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('country', 'string', 5, array(
             'type' => 'string',
             'length' => 5,
             ));
        $this->hasColumn('language_id', 'string', 5, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 5,
             ));


        $this->index('contact_status', array(
             'fields' => 
             array(
              0 => 'status',
             ),
             ));
        $this->index('contact_mail_status', array(
             'fields' => 
             array(
              0 => 'status',
              1 => 'mailing_list_id',
             ),
             ));
        $this->index('contact_country', array(
             'fields' => 
             array(
              0 => 'country',
             ),
             ));
        $this->index('contact_gender', array(
             'fields' => 
             array(
              0 => 'gender',
             ),
             ));
        $this->index('contact_lastname', array(
             'fields' => 
             array(
              0 => 'lastname',
             ),
             ));
        $this->option('options', NULL);
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('MailingList', array(
             'local' => 'mailing_list_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('PetitionSigning', array(
             'refClass' => 'PetitionSigningContact',
             'local' => 'contact_id',
             'foreign' => 'petition_signing_id'));

        $this->hasOne('Language', array(
             'local' => 'language_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('ContactMeta', array(
             'local' => 'id',
             'foreign' => 'contact_id'));

        $this->hasMany('PetitionSigningContact', array(
             'local' => 'id',
             'foreign' => 'contact_id'));

        $this->hasMany('PetitionContact as PetitionContacts', array(
             'local' => 'id',
             'foreign' => 'contact_id'));

        $this->hasMany('Pledge as Pledges', array(
             'local' => 'id',
             'foreign' => 'contact_id'));
    }
}