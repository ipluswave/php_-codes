<?php

/**
 * BaseTaxNote
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property clob $note
 * @property Doctrine_Collection $CountryTaxesNoVat
 * @property Doctrine_Collection $CountryTaxesVat
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method string              getName()              Returns the current record's "name" value
 * @method clob                getNote()              Returns the current record's "note" value
 * @method Doctrine_Collection getCountryTaxesNoVat() Returns the current record's "CountryTaxesNoVat" collection
 * @method Doctrine_Collection getCountryTaxesVat()   Returns the current record's "CountryTaxesVat" collection
 * @method TaxNote             setId()                Sets the current record's "id" value
 * @method TaxNote             setName()              Sets the current record's "name" value
 * @method TaxNote             setNote()              Sets the current record's "note" value
 * @method TaxNote             setCountryTaxesNoVat() Sets the current record's "CountryTaxesNoVat" collection
 * @method TaxNote             setCountryTaxesVat()   Sets the current record's "CountryTaxesVat" collection
 * 
 * @package    policat
 * @subpackage model
 * @author     Martin
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTaxNote extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tax_note');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 40, array(
             'type' => 'string',
             'unique' => true,
             'length' => 40,
             ));
        $this->hasColumn('note', 'clob', null, array(
             'type' => 'clob',
             ));

        $this->option('options', NULL);
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('CountryTax as CountryTaxesNoVat', array(
             'local' => 'id',
             'foreign' => 'no_vat_note_id'));

        $this->hasMany('CountryTax as CountryTaxesVat', array(
             'local' => 'id',
             'foreign' => 'vat_note_id'));
    }
}