<?php

/**
 * BaseStore
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $key
 * @property clob $value
 * @property string $language_id
 * @property Language $Language
 * 
 * @method string   getKey()         Returns the current record's "key" value
 * @method clob     getValue()       Returns the current record's "value" value
 * @method string   getLanguageId()  Returns the current record's "language_id" value
 * @method Language getLanguage()    Returns the current record's "Language" value
 * @method Store    setKey()         Sets the current record's "key" value
 * @method Store    setValue()       Sets the current record's "value" value
 * @method Store    setLanguageId()  Sets the current record's "language_id" value
 * @method Store    setLanguage()    Sets the current record's "Language" value
 * 
 * @package    policat
 * @subpackage model
 * @author     Martin
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStore extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('store');
        $this->hasColumn('key_ as key', 'string', 80, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => false,
             'length' => 80,
             ));
        $this->hasColumn('value', 'clob', null, array(
             'type' => 'clob',
             'notnull' => false,
             ));
        $this->hasColumn('language_id', 'string', 5, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 5,
             ));


        $this->index('store_idx', array(
             'fields' => 
             array(
              0 => 'key_',
              1 => 'language_id',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Language', array(
             'local' => 'language_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $cachetaggable0 = new Doctrine_Template_Cachetaggable();
        $this->actAs($cachetaggable0);
    }
}