<?php

/**
 * BaseWidget
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $parent_id
 * @property integer $campaign_id
 * @property integer $petition_id
 * @property integer $petition_text_id
 * @property integer $origin_widget_id
 * @property integer $status
 * @property string $title
 * @property clob $target
 * @property clob $background
 * @property clob $intro
 * @property clob $footer
 * @property string $email_subject
 * @property clob $email_body
 * @property clob $stylings
 * @property string $email
 * @property string $organisation
 * @property string $landing_url
 * @property string $donate_url
 * @property clob $donate_text
 * @property string $ref
 * @property integer $validation_kind
 * @property string $validation_data
 * @property integer $validation_status
 * @property string $edit_code
 * @property string $paypal_email
 * @property integer $user_id
 * @property integer $data_owner
 * @property timestamp $activity_at
 * @property string $last_ref
 * @property Campaign $Campaign
 * @property Petition $Petition
 * @property PetitionText $PetitionText
 * @property Widget $Parent
 * @property Doctrine_Collection $Children
 * @property sfGuardUser $User
 * @property Widget $OriginWidget
 * @property Doctrine_Collection $usedByPetitionText
 * @property Doctrine_Collection $OriginWidgetFor
 * @property Doctrine_Collection $PetitionSigning
 * @property Doctrine_Collection $PetitionSigningWave
 * @property Doctrine_Collection $FacebookTab
 * @property Owner $Owner
 * @property WidgetOwner $WidgetOwner
 * @property Doctrine_Collection $Tickets
 * @property Doctrine_Collection $Downloads
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method integer             getParentId()            Returns the current record's "parent_id" value
 * @method integer             getCampaignId()          Returns the current record's "campaign_id" value
 * @method integer             getPetitionId()          Returns the current record's "petition_id" value
 * @method integer             getPetitionTextId()      Returns the current record's "petition_text_id" value
 * @method integer             getOriginWidgetId()      Returns the current record's "origin_widget_id" value
 * @method integer             getStatus()              Returns the current record's "status" value
 * @method string              getTitle()               Returns the current record's "title" value
 * @method clob                getTarget()              Returns the current record's "target" value
 * @method clob                getBackground()          Returns the current record's "background" value
 * @method clob                getIntro()               Returns the current record's "intro" value
 * @method clob                getFooter()              Returns the current record's "footer" value
 * @method string              getEmailSubject()        Returns the current record's "email_subject" value
 * @method clob                getEmailBody()           Returns the current record's "email_body" value
 * @method clob                getStylings()            Returns the current record's "stylings" value
 * @method string              getEmail()               Returns the current record's "email" value
 * @method string              getOrganisation()        Returns the current record's "organisation" value
 * @method string              getLandingUrl()          Returns the current record's "landing_url" value
 * @method string              getDonateUrl()           Returns the current record's "donate_url" value
 * @method clob                getDonateText()          Returns the current record's "donate_text" value
 * @method string              getRef()                 Returns the current record's "ref" value
 * @method integer             getValidationKind()      Returns the current record's "validation_kind" value
 * @method string              getValidationData()      Returns the current record's "validation_data" value
 * @method integer             getValidationStatus()    Returns the current record's "validation_status" value
 * @method string              getEditCode()            Returns the current record's "edit_code" value
 * @method string              getPaypalEmail()         Returns the current record's "paypal_email" value
 * @method integer             getUserId()              Returns the current record's "user_id" value
 * @method integer             getDataOwner()           Returns the current record's "data_owner" value
 * @method timestamp           getActivityAt()          Returns the current record's "activity_at" value
 * @method string              getLastRef()             Returns the current record's "last_ref" value
 * @method Campaign            getCampaign()            Returns the current record's "Campaign" value
 * @method Petition            getPetition()            Returns the current record's "Petition" value
 * @method PetitionText        getPetitionText()        Returns the current record's "PetitionText" value
 * @method Widget              getParent()              Returns the current record's "Parent" value
 * @method Doctrine_Collection getChildren()            Returns the current record's "Children" collection
 * @method sfGuardUser         getUser()                Returns the current record's "User" value
 * @method Widget              getOriginWidget()        Returns the current record's "OriginWidget" value
 * @method Doctrine_Collection getUsedByPetitionText()  Returns the current record's "usedByPetitionText" collection
 * @method Doctrine_Collection getOriginWidgetFor()     Returns the current record's "OriginWidgetFor" collection
 * @method Doctrine_Collection getPetitionSigning()     Returns the current record's "PetitionSigning" collection
 * @method Doctrine_Collection getPetitionSigningWave() Returns the current record's "PetitionSigningWave" collection
 * @method Doctrine_Collection getFacebookTab()         Returns the current record's "FacebookTab" collection
 * @method Owner               getOwner()               Returns the current record's "Owner" value
 * @method WidgetOwner         getWidgetOwner()         Returns the current record's "WidgetOwner" value
 * @method Doctrine_Collection getTickets()             Returns the current record's "Tickets" collection
 * @method Doctrine_Collection getDownloads()           Returns the current record's "Downloads" collection
 * @method Widget              setId()                  Sets the current record's "id" value
 * @method Widget              setParentId()            Sets the current record's "parent_id" value
 * @method Widget              setCampaignId()          Sets the current record's "campaign_id" value
 * @method Widget              setPetitionId()          Sets the current record's "petition_id" value
 * @method Widget              setPetitionTextId()      Sets the current record's "petition_text_id" value
 * @method Widget              setOriginWidgetId()      Sets the current record's "origin_widget_id" value
 * @method Widget              setStatus()              Sets the current record's "status" value
 * @method Widget              setTitle()               Sets the current record's "title" value
 * @method Widget              setTarget()              Sets the current record's "target" value
 * @method Widget              setBackground()          Sets the current record's "background" value
 * @method Widget              setIntro()               Sets the current record's "intro" value
 * @method Widget              setFooter()              Sets the current record's "footer" value
 * @method Widget              setEmailSubject()        Sets the current record's "email_subject" value
 * @method Widget              setEmailBody()           Sets the current record's "email_body" value
 * @method Widget              setStylings()            Sets the current record's "stylings" value
 * @method Widget              setEmail()               Sets the current record's "email" value
 * @method Widget              setOrganisation()        Sets the current record's "organisation" value
 * @method Widget              setLandingUrl()          Sets the current record's "landing_url" value
 * @method Widget              setDonateUrl()           Sets the current record's "donate_url" value
 * @method Widget              setDonateText()          Sets the current record's "donate_text" value
 * @method Widget              setRef()                 Sets the current record's "ref" value
 * @method Widget              setValidationKind()      Sets the current record's "validation_kind" value
 * @method Widget              setValidationData()      Sets the current record's "validation_data" value
 * @method Widget              setValidationStatus()    Sets the current record's "validation_status" value
 * @method Widget              setEditCode()            Sets the current record's "edit_code" value
 * @method Widget              setPaypalEmail()         Sets the current record's "paypal_email" value
 * @method Widget              setUserId()              Sets the current record's "user_id" value
 * @method Widget              setDataOwner()           Sets the current record's "data_owner" value
 * @method Widget              setActivityAt()          Sets the current record's "activity_at" value
 * @method Widget              setLastRef()             Sets the current record's "last_ref" value
 * @method Widget              setCampaign()            Sets the current record's "Campaign" value
 * @method Widget              setPetition()            Sets the current record's "Petition" value
 * @method Widget              setPetitionText()        Sets the current record's "PetitionText" value
 * @method Widget              setParent()              Sets the current record's "Parent" value
 * @method Widget              setChildren()            Sets the current record's "Children" collection
 * @method Widget              setUser()                Sets the current record's "User" value
 * @method Widget              setOriginWidget()        Sets the current record's "OriginWidget" value
 * @method Widget              setUsedByPetitionText()  Sets the current record's "usedByPetitionText" collection
 * @method Widget              setOriginWidgetFor()     Sets the current record's "OriginWidgetFor" collection
 * @method Widget              setPetitionSigning()     Sets the current record's "PetitionSigning" collection
 * @method Widget              setPetitionSigningWave() Sets the current record's "PetitionSigningWave" collection
 * @method Widget              setFacebookTab()         Sets the current record's "FacebookTab" collection
 * @method Widget              setOwner()               Sets the current record's "Owner" value
 * @method Widget              setWidgetOwner()         Sets the current record's "WidgetOwner" value
 * @method Widget              setTickets()             Sets the current record's "Tickets" collection
 * @method Widget              setDownloads()           Sets the current record's "Downloads" collection
 * 
 * @package    policat
 * @subpackage model
 * @author     Martin
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWidget extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('widget');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('parent_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('campaign_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('petition_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('petition_text_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('origin_widget_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('target', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('background', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('intro', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('footer', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('email_subject', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('email_body', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('stylings', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('email', 'string', 80, array(
             'type' => 'string',
             'length' => 80,
             ));
        $this->hasColumn('organisation', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('landing_url', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('donate_url', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 200,
             ));
        $this->hasColumn('donate_text', 'clob', null, array(
             'type' => 'clob',
             'notnull' => false,
             ));
        $this->hasColumn('ref', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('validation_kind', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('validation_data', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('validation_status', 'integer', 1, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('edit_code', 'string', 40, array(
             'type' => 'string',
             'length' => 40,
             ));
        $this->hasColumn('paypal_email', 'string', 80, array(
             'type' => 'string',
             'length' => 80,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('data_owner', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('activity_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('last_ref', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 200,
             ));


        $this->index('widget_parent_id_index', array(
             'fields' => 
             array(
              0 => 'parent_id',
             ),
             ));
        $this->index('widget_activity', array(
             'fields' => 
             array(
              0 => 'activity_at',
              1 => 'status',
             ),
             ));
        $this->index('widget_activity2', array(
             'fields' => 
             array(
              0 => 'petition_id',
              1 => 'activity_at',
              2 => 'status',
             ),
             ));
        $this->index('widget_origin', array(
             'fields' => 
             array(
              0 => 'petition_id',
              1 => 'origin_widget_id',
             ),
             ));
        $this->index('widget_email', array(
             'fields' => 
             array(
              0 => 'email',
              1 => 'user_id',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Campaign', array(
             'local' => 'campaign_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Petition', array(
             'local' => 'petition_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('PetitionText', array(
             'local' => 'petition_text_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Widget as Parent', array(
             'local' => 'parent_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('Widget as Children', array(
             'local' => 'id',
             'foreign' => 'parent_id'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Widget as OriginWidget', array(
             'local' => 'origin_widget_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('PetitionText as usedByPetitionText', array(
             'local' => 'id',
             'foreign' => 'widget_id'));

        $this->hasMany('Widget as OriginWidgetFor', array(
             'local' => 'id',
             'foreign' => 'origin_widget_id'));

        $this->hasMany('PetitionSigning', array(
             'local' => 'id',
             'foreign' => 'widget_id'));

        $this->hasMany('PetitionSigningWave', array(
             'local' => 'id',
             'foreign' => 'widget_id'));

        $this->hasMany('FacebookTab', array(
             'local' => 'id',
             'foreign' => 'widget_id'));

        $this->hasOne('Owner', array(
             'local' => 'id',
             'foreign' => 'first_widget_id'));

        $this->hasOne('WidgetOwner', array(
             'local' => 'id',
             'foreign' => 'widget_id'));

        $this->hasMany('Ticket as Tickets', array(
             'local' => 'id',
             'foreign' => 'widget_id'));

        $this->hasMany('Download as Downloads', array(
             'local' => 'id',
             'foreign' => 'widget_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $cachetaggable0 = new Doctrine_Template_Cachetaggable(array(
             'skipOnChange' => 
             array(
              0 => 'activity_at',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($cachetaggable0);
    }
}