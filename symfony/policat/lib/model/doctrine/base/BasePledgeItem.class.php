<?php

/**
 * BasePledgeItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $petition_id
 * @property integer $status
 * @property string $name
 * @property string $icon
 * @property string $color
 * @property Petition $Petition
 * @property Doctrine_Collection $PledgeTexts
 * @property Doctrine_Collection $Pledges
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method integer             getPetitionId()  Returns the current record's "petition_id" value
 * @method integer             getStatus()      Returns the current record's "status" value
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getIcon()        Returns the current record's "icon" value
 * @method string              getColor()       Returns the current record's "color" value
 * @method Petition            getPetition()    Returns the current record's "Petition" value
 * @method Doctrine_Collection getPledgeTexts() Returns the current record's "PledgeTexts" collection
 * @method Doctrine_Collection getPledges()     Returns the current record's "Pledges" collection
 * @method PledgeItem          setId()          Sets the current record's "id" value
 * @method PledgeItem          setPetitionId()  Sets the current record's "petition_id" value
 * @method PledgeItem          setStatus()      Sets the current record's "status" value
 * @method PledgeItem          setName()        Sets the current record's "name" value
 * @method PledgeItem          setIcon()        Sets the current record's "icon" value
 * @method PledgeItem          setColor()       Sets the current record's "color" value
 * @method PledgeItem          setPetition()    Sets the current record's "Petition" value
 * @method PledgeItem          setPledgeTexts() Sets the current record's "PledgeTexts" collection
 * @method PledgeItem          setPledges()     Sets the current record's "Pledges" collection
 * 
 * @package    policat
 * @subpackage model
 * @author     Martin
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePledgeItem extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('pledge_item');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('petition_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('name', 'string', 80, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 80,
             ));
        $this->hasColumn('icon', 'string', 80, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'star',
             'length' => 80,
             ));
        $this->hasColumn('color', 'string', 6, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '000000',
             'length' => 6,
             ));

        $this->option('form', true);
        $this->option('filter', false);
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Petition', array(
             'local' => 'petition_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('PledgeText as PledgeTexts', array(
             'local' => 'id',
             'foreign' => 'pledge_item_id'));

        $this->hasMany('Pledge as Pledges', array(
             'local' => 'id',
             'foreign' => 'pledge_item_id'));
    }
}