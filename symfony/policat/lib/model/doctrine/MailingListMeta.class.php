<?php

/**
 * MailingListMeta
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    policat
 * @subpackage model
 * @author     Martin
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class MailingListMeta extends BaseMailingListMeta {

  const KIND_CHOICE = 1;
  const KIND_FREE = 2;
  const KIND_MAPPING = 3;

  static $KIND_SHOW = array(
      self::KIND_CHOICE => 'selector',
      self::KIND_FREE => 'text',
      self::KIND_MAPPING => 'mapping'
  );

  public function calcIsEditableByPermission($permissions) {
    return true;
  }

  public function getKindName() {
    return self::$KIND_SHOW[$this->getKind()];
  }

  public function setMulti($enable) {
    $this->utilSetFieldFromArray('data_json', 'multi', $enable ? true : false);
  }

  public function getMulti() {
    return $this->utilGetFieldFromArray('data_json', 'multi', false);
  }

  public function setTypfield($enable) {
    $this->utilSetFieldFromArray('data_json', 'typfield', $enable ? true : false);
  }

  public function getTypfield() {
    return $this->utilGetFieldFromArray('data_json', 'typfield', false);
  }

  public function setMeta(MailingListMeta $meta) {
    if ($meta) {
      $this->utilSetFieldFromArray('data_json', 'meta_id', $meta->getId());
    } else {
      $this->utilSetFieldFromArray('data_json', 'meta_id', null);
    }
  }

  public function getMeta() {
    $meta = $this->utilGetFieldFromArray('data_json', 'meta_id', null);
    if ($meta) {
      return MailingListMetaTable::getInstance()->findOneById($meta);
    }

    return null;
  }

  public function setMetaId($id) {
    $this->utilSetFieldFromArray('data_json', 'meta_id', $id);
  }

  public function getMetaId() {
    return $this->utilGetFieldFromArray('data_json', 'meta_id', null);
  }

  public function setMapping(Mapping $mapping) {
    if ($mapping) {
      $this->utilSetFieldFromArray('data_json', 'mapping_id', $mapping->getId());
    } else {
      $this->utilSetFieldFromArray('data_json', 'mapping_id', null);
    }
  }

  public function getMapping() {
    $mapping_id = $this->utilGetFieldFromArray('data_json', 'mapping_id', null);
    if ($mapping_id) {
      return MappingTable::getInstance()->findOneById($mapping_id);
    }

    return null;
  }

  public function setMappingId($id) {
    $this->utilSetFieldFromArray('data_json', 'mapping_id', $id);
  }

  public function getMappingId() {
    return $this->utilGetFieldFromArray('data_json', 'mapping_id', null);
  }

}