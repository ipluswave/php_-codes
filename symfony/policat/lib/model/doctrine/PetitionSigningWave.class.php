<?php

/**
 * PetitionSigningWave
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    policat
 * @subpackage model
 * @author     Martin
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class PetitionSigningWave extends BasePetitionSigningWave {

  public function getField($name, $default = null) {
    if ($name instanceof Formfield || (is_array($name) && isset($name['name'])))
      $name = $name['name'];

    return $this->utilGetFieldFromArray('fields', $name, $default);
  }

  public function getEmailContact($override_email = null, $via_tld = false) {
    $name_suffix = '';
    if ($via_tld) {
      $tld = $this->getRefTld();
      if ($tld) {
        $name_suffix = ' via ' . $tld;
      }
    }

    if ($override_email) {
      return array($override_email => $this->getComputedName() . $name_suffix);
    } else {
      return array($this->getField(Petition::FIELD_EMAIL) => $this->getComputedName() . $name_suffix);
    }
  }

  public function getComputedName() {
    $firstname = $this->getField(Petition::FIELD_FIRSTNAME);
    $lastname = $this->getField(Petition::FIELD_LASTNAME);
    $fullname = $this->getField(Petition::FIELD_FULLNAME);
    $name = array();
    if (!empty($firstname))
      $name[] = $firstname;
    if (!empty($lastname))
      $name[] = $lastname;
    if (!empty($fullname))
      $name[] = $fullname;
    return join(' ', $name);
  }

  public function getComputedAddress($culture = 'en') {
    $address = $this->getField(Petition::FIELD_ADDRESS);
    $postcode = $this->getField(Petition::FIELD_POSTCODE);
    $city = $this->getField(Petition::FIELD_CITY);
    try {
      $country = sfCultureInfo::getInstance($culture)->getCountry($this->getField(Petition::FIELD_COUNTRY));
    } catch (Exception $e) {
      $country = $this->getField(Petition::FIELD_COUNTRY);
    }

    $ret = $this->getComputedName();
    if ($address)
      $ret .= "\n" . $address;
    if ($city) {
      if ($postcode)
        $ret .= "\n" . $postcode . ' ' . $city;
      else
        $ret .= "\n" . $city;
    }
    else {
      if ($postcode)
        $ret .= "\n" . $postcode;
    }
    if ($country)
      $ret .= "\n" . $country;
    return $ret;
  }

  public function getRefTld() {
    $ref = $this->getField(Petition::FIELD_REF);
    if ($ref) {
      $host = parse_url($ref, PHP_URL_HOST);
      if ($host) {
        $parts = explode('.', $host);
        $count = count($parts);
        if ($count > 1) {
          return $parts[$count - 2] . '.' . $parts[$count - 1];
        }
      }
    }

    return null;
  }

}
