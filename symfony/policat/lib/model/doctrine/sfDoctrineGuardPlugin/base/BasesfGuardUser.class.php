<?php

/**
 * BasesfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $first_name
 * @property string $last_name
 * @property string $email_address
 * @property string $username
 * @property string $algorithm
 * @property string $salt
 * @property string $password
 * @property boolean $is_active
 * @property boolean $is_super_admin
 * @property timestamp $last_login
 * @property integer $id
 * @property string $organisation
 * @property string $website
 * @property string $mobile
 * @property string $phone
 * @property string $street
 * @property string $city
 * @property string $post_code
 * @property string $country
 * @property string $vat
 * @property string $language_id
 * @property integer $validation_kind
 * @property string $validation_code
 * @property Doctrine_Collection $Groups
 * @property Doctrine_Collection $Permissions
 * @property Language $Language
 * @property Doctrine_Collection $sfGuardUserPermission
 * @property Doctrine_Collection $sfGuardUserGroup
 * @property sfGuardRememberKey $RememberKeys
 * @property sfGuardForgotPassword $ForgotPassword
 * @property Doctrine_Collection $Member
 * @property Doctrine_Collection $Campaign
 * @property Doctrine_Collection $DataOwnerCampaigns
 * @property Doctrine_Collection $CampaignRights
 * @property Doctrine_Collection $PetitionRights
 * @property Doctrine_Collection $TargetListRights
 * @property Doctrine_Collection $TicketsFrom
 * @property Doctrine_Collection $TicketsTo
 * @property Doctrine_Collection $Downloads
 * @property Doctrine_Collection $Quotas
 * 
 * @method string                getFirstName()             Returns the current record's "first_name" value
 * @method string                getLastName()              Returns the current record's "last_name" value
 * @method string                getEmailAddress()          Returns the current record's "email_address" value
 * @method string                getUsername()              Returns the current record's "username" value
 * @method string                getAlgorithm()             Returns the current record's "algorithm" value
 * @method string                getSalt()                  Returns the current record's "salt" value
 * @method string                getPassword()              Returns the current record's "password" value
 * @method boolean               getIsActive()              Returns the current record's "is_active" value
 * @method boolean               getIsSuperAdmin()          Returns the current record's "is_super_admin" value
 * @method timestamp             getLastLogin()             Returns the current record's "last_login" value
 * @method integer               getId()                    Returns the current record's "id" value
 * @method string                getOrganisation()          Returns the current record's "organisation" value
 * @method string                getWebsite()               Returns the current record's "website" value
 * @method string                getMobile()                Returns the current record's "mobile" value
 * @method string                getPhone()                 Returns the current record's "phone" value
 * @method string                getStreet()                Returns the current record's "street" value
 * @method string                getCity()                  Returns the current record's "city" value
 * @method string                getPostCode()              Returns the current record's "post_code" value
 * @method string                getCountry()               Returns the current record's "country" value
 * @method string                getVat()                   Returns the current record's "vat" value
 * @method string                getLanguageId()            Returns the current record's "language_id" value
 * @method integer               getValidationKind()        Returns the current record's "validation_kind" value
 * @method string                getValidationCode()        Returns the current record's "validation_code" value
 * @method Doctrine_Collection   getGroups()                Returns the current record's "Groups" collection
 * @method Doctrine_Collection   getPermissions()           Returns the current record's "Permissions" collection
 * @method Language              getLanguage()              Returns the current record's "Language" value
 * @method Doctrine_Collection   getSfGuardUserPermission() Returns the current record's "sfGuardUserPermission" collection
 * @method Doctrine_Collection   getSfGuardUserGroup()      Returns the current record's "sfGuardUserGroup" collection
 * @method sfGuardRememberKey    getRememberKeys()          Returns the current record's "RememberKeys" value
 * @method sfGuardForgotPassword getForgotPassword()        Returns the current record's "ForgotPassword" value
 * @method Doctrine_Collection   getMember()                Returns the current record's "Member" collection
 * @method Doctrine_Collection   getCampaign()              Returns the current record's "Campaign" collection
 * @method Doctrine_Collection   getDataOwnerCampaigns()    Returns the current record's "DataOwnerCampaigns" collection
 * @method Doctrine_Collection   getCampaignRights()        Returns the current record's "CampaignRights" collection
 * @method Doctrine_Collection   getPetitionRights()        Returns the current record's "PetitionRights" collection
 * @method Doctrine_Collection   getTargetListRights()      Returns the current record's "TargetListRights" collection
 * @method Doctrine_Collection   getTicketsFrom()           Returns the current record's "TicketsFrom" collection
 * @method Doctrine_Collection   getTicketsTo()             Returns the current record's "TicketsTo" collection
 * @method Doctrine_Collection   getDownloads()             Returns the current record's "Downloads" collection
 * @method Doctrine_Collection   getQuotas()                Returns the current record's "Quotas" collection
 * @method sfGuardUser           setFirstName()             Sets the current record's "first_name" value
 * @method sfGuardUser           setLastName()              Sets the current record's "last_name" value
 * @method sfGuardUser           setEmailAddress()          Sets the current record's "email_address" value
 * @method sfGuardUser           setUsername()              Sets the current record's "username" value
 * @method sfGuardUser           setAlgorithm()             Sets the current record's "algorithm" value
 * @method sfGuardUser           setSalt()                  Sets the current record's "salt" value
 * @method sfGuardUser           setPassword()              Sets the current record's "password" value
 * @method sfGuardUser           setIsActive()              Sets the current record's "is_active" value
 * @method sfGuardUser           setIsSuperAdmin()          Sets the current record's "is_super_admin" value
 * @method sfGuardUser           setLastLogin()             Sets the current record's "last_login" value
 * @method sfGuardUser           setId()                    Sets the current record's "id" value
 * @method sfGuardUser           setOrganisation()          Sets the current record's "organisation" value
 * @method sfGuardUser           setWebsite()               Sets the current record's "website" value
 * @method sfGuardUser           setMobile()                Sets the current record's "mobile" value
 * @method sfGuardUser           setPhone()                 Sets the current record's "phone" value
 * @method sfGuardUser           setStreet()                Sets the current record's "street" value
 * @method sfGuardUser           setCity()                  Sets the current record's "city" value
 * @method sfGuardUser           setPostCode()              Sets the current record's "post_code" value
 * @method sfGuardUser           setCountry()               Sets the current record's "country" value
 * @method sfGuardUser           setVat()                   Sets the current record's "vat" value
 * @method sfGuardUser           setLanguageId()            Sets the current record's "language_id" value
 * @method sfGuardUser           setValidationKind()        Sets the current record's "validation_kind" value
 * @method sfGuardUser           setValidationCode()        Sets the current record's "validation_code" value
 * @method sfGuardUser           setGroups()                Sets the current record's "Groups" collection
 * @method sfGuardUser           setPermissions()           Sets the current record's "Permissions" collection
 * @method sfGuardUser           setLanguage()              Sets the current record's "Language" value
 * @method sfGuardUser           setSfGuardUserPermission() Sets the current record's "sfGuardUserPermission" collection
 * @method sfGuardUser           setSfGuardUserGroup()      Sets the current record's "sfGuardUserGroup" collection
 * @method sfGuardUser           setRememberKeys()          Sets the current record's "RememberKeys" value
 * @method sfGuardUser           setForgotPassword()        Sets the current record's "ForgotPassword" value
 * @method sfGuardUser           setMember()                Sets the current record's "Member" collection
 * @method sfGuardUser           setCampaign()              Sets the current record's "Campaign" collection
 * @method sfGuardUser           setDataOwnerCampaigns()    Sets the current record's "DataOwnerCampaigns" collection
 * @method sfGuardUser           setCampaignRights()        Sets the current record's "CampaignRights" collection
 * @method sfGuardUser           setPetitionRights()        Sets the current record's "PetitionRights" collection
 * @method sfGuardUser           setTargetListRights()      Sets the current record's "TargetListRights" collection
 * @method sfGuardUser           setTicketsFrom()           Sets the current record's "TicketsFrom" collection
 * @method sfGuardUser           setTicketsTo()             Sets the current record's "TicketsTo" collection
 * @method sfGuardUser           setDownloads()             Sets the current record's "Downloads" collection
 * @method sfGuardUser           setQuotas()                Sets the current record's "Quotas" collection
 * 
 * @package    policat
 * @subpackage model
 * @author     Martin
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardUser extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_user');
        $this->hasColumn('first_name', 'string', 40, array(
             'type' => 'string',
             'length' => 40,
             ));
        $this->hasColumn('last_name', 'string', 40, array(
             'type' => 'string',
             'length' => 40,
             ));
        $this->hasColumn('email_address', 'string', 80, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 80,
             ));
        $this->hasColumn('username', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 128,
             ));
        $this->hasColumn('algorithm', 'string', 128, array(
             'type' => 'string',
             'default' => 'sha1',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('salt', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('password', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('is_super_admin', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('organisation', 'string', 120, array(
             'type' => 'string',
             'length' => 120,
             ));
        $this->hasColumn('website', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('mobile', 'string', 40, array(
             'type' => 'string',
             'length' => 40,
             ));
        $this->hasColumn('phone', 'string', 40, array(
             'type' => 'string',
             'length' => 40,
             ));
        $this->hasColumn('street', 'string', 120, array(
             'type' => 'string',
             'length' => 120,
             ));
        $this->hasColumn('city', 'string', 120, array(
             'type' => 'string',
             'length' => 120,
             ));
        $this->hasColumn('post_code', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('country', 'string', 2, array(
             'type' => 'string',
             'length' => 2,
             ));
        $this->hasColumn('vat', 'string', 40, array(
             'type' => 'string',
             'length' => 40,
             ));
        $this->hasColumn('language_id', 'string', 5, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 5,
             ));
        $this->hasColumn('validation_kind', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('validation_code', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));


        $this->index('is_active_idx', array(
             'fields' => 
             array(
              0 => 'is_active',
             ),
             ));
        $this->option('options', NULL);
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardGroup as Groups', array(
             'refClass' => 'sfGuardUserGroup',
             'local' => 'user_id',
             'foreign' => 'group_id'));

        $this->hasMany('sfGuardPermission as Permissions', array(
             'refClass' => 'sfGuardUserPermission',
             'local' => 'user_id',
             'foreign' => 'permission_id'));

        $this->hasOne('Language', array(
             'local' => 'language_id',
             'foreign' => 'id'));

        $this->hasMany('sfGuardUserPermission', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardUserGroup', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardRememberKey as RememberKeys', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardForgotPassword as ForgotPassword', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Member', array(
             'local' => 'id',
             'foreign' => 'sf_guard_user_id'));

        $this->hasMany('Campaign', array(
             'refClass' => 'Member',
             'local' => 'sf_guard_user_id',
             'foreign' => 'campaign_id'));

        $this->hasMany('Campaign as DataOwnerCampaigns', array(
             'local' => 'id',
             'foreign' => 'data_owner_id'));

        $this->hasMany('CampaignRights', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('PetitionRights', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('TargetListRights', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Ticket as TicketsFrom', array(
             'local' => 'id',
             'foreign' => 'from_id'));

        $this->hasMany('Ticket as TicketsTo', array(
             'local' => 'id',
             'foreign' => 'to_id'));

        $this->hasMany('Download as Downloads', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Quota as Quotas', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}