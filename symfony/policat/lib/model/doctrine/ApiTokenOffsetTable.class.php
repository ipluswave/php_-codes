<?php
/*
 * Copyright (c) 2016, webvariants GmbH <?php Co. KG, http://www.webvariants.de
 *
 * This file is released under the terms of the MIT license. You can find the
 * complete text in the attached LICENSE file or online at:
 *
 * http://www.opensource.org/licenses/mit-license.php
 */

/**
 * ApiTokenOffsetTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ApiTokenOffsetTable extends Doctrine_Table {

  /**
   * Returns an instance of this class.
   *
   * @return ApiTokenOffsetTable The table instance
   */
  public static function getInstance() {
    return Doctrine_Core::getTable('ApiTokenOffset');
  }

  /**
   *
   * @param PetitionApiToken $api_token
   * @return \Doctrine_Collection
   */
  public function fetchOffsetsByToken(PetitionApiToken $api_token) {
    $coll = new Doctrine_Collection('ApiTokenOffset', 'country');
    
    foreach ($this->createQuery('o')->where('o.petition_api_token_id = ?', $api_token->getId())->execute() as $offset) {
      $coll->add($offset);
    }

    return $coll;
  }

    public function sumOffsetsBYToken($api_token, $timeToLive = 600, $refresh = false) {
    $api_token_id = $api_token instanceof PetitionApiToken ? $api_token->getId() : $api_token;

    $query = $this->createQuery('o')
      ->where('o.petition_api_token_id = ?', $api_token_id)
      ->select('sum(o.addnum) as addnum');

    if ($refresh)
      $query->expireResultCache();

    if ($timeToLive)
      $query->useResultCache(true, $timeToLive);

    return (int) $query->execute(array(), Doctrine_Core::HYDRATE_SINGLE_SCALAR);
  }
}
